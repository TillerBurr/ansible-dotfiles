- name: Remove Neovim
  shell: rm -rf ~/neovim
  tags:
    - neovim
- name: Install packages
  become: true
  ansible.builtin.apt:
    name:
      - ripgrep
      - fzf
      - clang
      - ninja-build
      - gettext
      - cmake
      - unzip

- name: Create ~/packages/
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/packages"
    state: directory
    mode: 0755

- name: Create ~/tools/
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/tools"
    state: directory
    mode: 0755

- name: Get Latest Neovim Tag
  shell: curl --silent 'https://api.github.com/repos/neovim/neovim/releases/latest' |  grep '"tag_name":' | cut -d'"' -f4
  register: latest_tag_nvim
  changed_when: false
  tags:
    - neovim

- name: Set latest tag
  set_fact:
    latest_tag: "{{ latest_tag_nvim.stdout }}"
  when: latest_tag_nvim.stdout is defined
  tags:
    - neovim

- name: Clone Neovim
  ansible.builtin.git:
    repo: 'https://github.com/neovim/neovim.git'
    dest: "{{ ansible_env.HOME }}/tools/neovim"
    version: "{{ latest_tag }}"
    force: true
  tags:
    - neovim
- name: Remove .deps
  ansible.builtin.file:
    path: "{{ansible_env.HOME}}/tools/neovim/.deps"
    state: absent
  tags:
    - neovim
- name: Build neovim
  shell: "cd {{ ansible_env.HOME }}/tools/neovim && make -j 20"
  tags:
    - neovim
- name: Install neovim
  become: true
  shell: "cd {{ ansible_env.HOME }}/tools/neovim && make install"
  tags:
    - neovim

- name: Neovim Plugin Development 1
  become: true
  apt: name=luarocks
  tags:
    - neovim
- name: Neovim Plugin Development 2 luacheck
  become: true
  shell: luarocks install luacheck
  tags:
    - neovim

- name: Install pynvim
  import_tasks: python.yml
